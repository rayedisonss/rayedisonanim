/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 public/models/ThreeShoes.glb 
*/

import React, { useLayoutEffect, useRef } from 'react'
import { useGLTF, useScroll } from '@react-three/drei'
import { useFrame } from '@react-three/fiber';
import { gsap } from 'gsap';


export const FLOOR_HEIGHT = 2.3;
export const NB_FLOORS = 3;

export function ThreeShoes(props) {


  // useRef digunakan untuk membuat referensi ke elemen DOM atau nilai tertentu di dalam komponen.
  // Nilai tersebut disimpan dalam properti current dari objek referensi.



  // Nilai yang disimpan dalam useRef tidak terpengaruh oleh re - render komponen.
  // Ini berarti nilai tersebut tetap ada di antara render, berbeda dengan state yang diperbarui saat komponen di - render ulang.

  // kayak 'document.getElementById('ref')'

  const ref = useRef();

  // TimeLine
  const tl = useRef();


  const sepatuDua = useRef();
  const sepatuTiga = useRef();


  const scroll = useScroll();

  // Agar sesuai dengan yang kita scroll
  useFrame(() => {
    tl.current.seek(scroll.offset * tl.current.duration());
  })


  // Akan berjalan sebelum elemen elemen di web terprint atau muncul
  // bersifat synchronous
  // jadi ini yang akan dijalankan duluan
  useLayoutEffect(() => {
    tl.current = gsap.timeline();


    // Catatan TIMELINE
    // Contoh :
    // tl.to("#id", { x: 100, duration: 1 }); 

    // parameter pertama di isi ID atau Selector nya, apa yang mau di animasikan,
    // Parameter kedua di isi Animasi nya mau apa? atau perubahan apa yang mau di buat
    // Parameter kedua ini harus Object




    // from() itu untuk menentukan keadaan awalnya







    // VERTICAL ANIMATION
    // Group object nya turun
    // Turun atau naiknya itu datar
    tl.current.to(
      ref.current.position,
      {
        duration: 2,
        y: -FLOOR_HEIGHT * (NB_FLOORS - 1),
      },
      0
    );
    tl.current.to(
      ref.current.rotation,
      { duration: 1, x: 0, y: Math.PI / 6, z: 0 },
      0
    );
    tl.current.to(
      ref.current.rotation,
      { duration: 1, x: 0, y: -Math.PI / 6, z: 0 },
      1
    );

    // ThreeShoes Rotation dikit dikit
    tl.current.to(
      ref.current.position,
      {
        duration: 1,
        x: -1,
        z: 2,
      },
      0
    );
    tl.current.to(
      ref.current.position,
      {
        duration: 1,
        x: 1,
        z: 2,
      },
      1
    );

    // Animasi sepatuDua
    tl.current.from(
      sepatuDua.current.position,
      {
        duration: 0.5,
        x: -2,
      },
      0.5
    );
    tl.current.from(
      sepatuDua.current.rotation,
      {
        duration: 0.5,
        y: -Math.PI / 2,
      },
      0
    );

    // Animasi SepatuTiga 
    tl.current.from(
      sepatuTiga.current.position,
      {
        duration: 1.5,
        y: 5,
      },
      0
    );

    tl.current.from(
      sepatuTiga.current.rotation,
      {
        duration: 0.5,
        y: Math.PI / 2,
      },
      1
    );



    // Ini kalo diganti ke To, trus z nya di ganti jadi -6 bakal jadi sebalik nya
    tl.current.from(
      sepatuTiga.current.position,
      {
        duration: 0.5,

        z: -1,
      },
      1.5
    );


    // Kalau from, kita atur dulu awalnya, setelah sampai akhir dia akan kembali ke nilai awal
    // Dari sono ke sini


    // Kalau To, kita atur nilai nya, nanti dia akan pindah ke nilai yang sudah kita inputkan
    // Dari sini ke sono

  }, []);






  const { nodes, materials } = useGLTF('/models/ThreeShoes.glb')
  return (
    <group {...props} dispose={null} ref={ref} position={[0.5, -1, -1]} rotation={[0, -Math.PI / 3, 0]}>
      <group position={[-0.014, 0.29, 0.014]} scale={[1.045, 1, 1]}>
        <mesh geometry={nodes.Obejct1.geometry} material={materials['Material.016']} />
        <mesh geometry={nodes.Obejct1_1.geometry} material={materials['Material.017']} />
        <mesh geometry={nodes.Obejct1_2.geometry} material={materials.Material} />
        <mesh geometry={nodes.Obejct1_3.geometry} material={materials['Material.018']} />
        <mesh geometry={nodes.Obejct1_4.geometry} material={materials['Material.019']} />
      </group>

      <group position={[0, 2.114, -2.23]} >
        <group ref={sepatuDua}>

          <mesh geometry={nodes.Object2.geometry} material={materials['Material.041']} />
          <mesh geometry={nodes.Object2_1.geometry} material={materials['Material.036']} />
          <mesh geometry={nodes.Object2_2.geometry} material={materials['Material.037']} />
          <mesh geometry={nodes.Object2_3.geometry} material={materials['Material.038']} />
          <mesh geometry={nodes.Object2_4.geometry} material={materials['Material.039']} />
          <mesh geometry={nodes.Object2_5.geometry} material={materials['Material.040']} />
          <mesh geometry={nodes.Object2_6.geometry} material={materials['Material.042']} />
        </group>
      </group>
      <group position={[-3, 4.227, -2.2]} rotation={[0, 0.45, 0]}>
        <group ref={sepatuTiga}>

          <mesh geometry={nodes.Object3.geometry} material={materials['Material.027']} />
          <mesh geometry={nodes.Object3_1.geometry} material={materials['Material.028']} />
          <mesh geometry={nodes.Object3_2.geometry} material={materials['Material.029']} />
          <mesh geometry={nodes.Object3_3.geometry} material={materials['Material.030']} />
          <mesh geometry={nodes.Object3_4.geometry} material={materials['Material.031']} />
          <mesh geometry={nodes.Object3_5.geometry} material={materials['Material.032']} />
          <mesh geometry={nodes.Object3_6.geometry} material={materials['Material.033']} />
          <mesh geometry={nodes.Object3_7.geometry} material={materials['Material.034']} />
          <mesh geometry={nodes.Object3_8.geometry} material={materials['Material.035']} />
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/models/ThreeShoes.glb')
